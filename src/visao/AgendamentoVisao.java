/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import dao.AgendamentoDAO;
import dao.ParceiroDAO;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import modelo.Agendamento;
import modelo.Caixa;
import modelo.Cliente;
import modelo.Parceiro;

/**
 *
 * @author akiot
 */
public class AgendamentoVisao extends JDialog {

    private final ParceiroDAO parceiroDAO;
    private List<Parceiro> parceiros;
    private final AgendamentoDAO agendamentoDAO;
    private List<Agendamento> agendamentos;
    private Caixa caixaAberto;
    private Agendamento agendamentoNovo;
    private Cliente clienteSelecionado;
    Long salvaid;

    /**
     * Creates new form AgendamentoVisao
     */
    public AgendamentoVisao() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/icones/vistotec-logo.png")).getImage());
        parceiroDAO = new ParceiroDAO();
        agendamentoDAO = new AgendamentoDAO();
        atualizaParceiros(parceiroDAO.findAll());
    }

    AgendamentoVisao(Caixa caixaAberto, Date date) {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/icones/vistotec-logo.png")).getImage());
        jDateChooserDataAgendamento.setDate(date);
        parceiroDAO = new ParceiroDAO();
        agendamentoDAO = new AgendamentoDAO();
        atualizaParceiros(parceiroDAO.findAll());
        this.caixaAberto = caixaAberto;

    }

    AgendamentoVisao(Caixa caixaAberto, Agendamento agendamento) {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/icones/vistotec-logo.png")).getImage());
        jDateChooserDataAgendamento.setDate(agendamento.getDataagendamento());
        jComboBoxHorario.setSelectedItem("" + agendamento.getDataagendamento().getHours());
        jComboBoxHorario.setEnabled(false);

        parceiroDAO = new ParceiroDAO();
        agendamentoDAO = new AgendamentoDAO();
        atualizaParceiros(parceiroDAO.findAll());
        jDateChooserDataAgendamento.setEnabled(false);

        this.caixaAberto = caixaAberto;
        agendamentoNovo = agendamento;

    }

    AgendamentoVisao(Agendamento a) {
        initComponents();
        parceiroDAO = new ParceiroDAO();
        agendamentoDAO = new AgendamentoDAO();

        this.caixaAberto = a.getCaixa();

        atualizaParceiros(parceiroDAO.findAll());

        jRadioButtonCliente.setEnabled(false);
        jRadioButtonSemCadastro.setEnabled(false);

        jDateChooserDataAgendamento.setDate(a.getDataagendamento());

        if (a.getCliente() != null) {
            jTextFieldNomeCliente.setText(a.getCliente().getNome());
            jRadioButtonCliente.setSelected(true);
            jRadioButtonSemCadastro.setSelected(false);
        }

        if (a.getParceiro() != null) {
            jComboBoxParceiro.setSelectedItem(a.getParceiro());
        }

        salvaid = a.getCodigo();

        jTextFieldEndereco.setText(a.getEndereco());
        jTextFieldTelefone.setText(a.getTelefone());
        jComboBoxTipoVeiculo.setSelectedItem(a.getTipoveiculo());

        DateFormat dateHora = new SimpleDateFormat("HH");

        jComboBoxHorario.setSelectedItem("" + dateHora.format(a.getDataagendamento()));

    }

    private void atualizaParceiros(List<Parceiro> parceiros) {

        String str = null;
        if (!parceiros.isEmpty()) {
            for (int i = 0; i < parceiros.size(); i++) {

                str = (String) parceiros.get(i).getNome();
                jComboBoxParceiro.addItem(str);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldNomeCliente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldEndereco = new javax.swing.JTextField();
        jDateChooserDataAgendamento = new com.toedter.calendar.JDateChooser();
        jComboBoxHorario = new javax.swing.JComboBox<>();
        jButtonAgendar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaObserv = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxTipoVeiculo = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jRadioButtonSemCadastro = new javax.swing.JRadioButton();
        jRadioButtonCliente = new javax.swing.JRadioButton();
        jRadioButtonSemParceiro = new javax.swing.JRadioButton();
        jRadioButtonParceiro = new javax.swing.JRadioButton();
        jComboBoxParceiro = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldTelefone = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("VistoTEC - Agendamento");

        jTextFieldNomeCliente.setFont(new java.awt.Font("Raleway", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Raleway", 1, 14)); // NOI18N
        jLabel4.setText("Endereço:");

        jTextFieldEndereco.setFont(new java.awt.Font("Raleway", 0, 14)); // NOI18N

        jDateChooserDataAgendamento.setForeground(new java.awt.Color(204, 0, 51));
        jDateChooserDataAgendamento.setDateFormatString("dd/MM/yy");
        jDateChooserDataAgendamento.setFont(new java.awt.Font("Segoe UI Symbol", 0, 24)); // NOI18N
        jDateChooserDataAgendamento.setOpaque(false);

        jComboBoxHorario.setFont(new java.awt.Font("Raleway", 0, 14)); // NOI18N
        jComboBoxHorario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17" }));

        jButtonAgendar.setFont(new java.awt.Font("Raleway", 1, 18)); // NOI18N
        jButtonAgendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icones_pretos/formulario.png"))); // NOI18N
        jButtonAgendar.setText("Agendar");
        jButtonAgendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgendarActionPerformed(evt);
            }
        });

        jButtonCancelar.setBackground(new java.awt.Color(255, 0, 0));
        jButtonCancelar.setFont(new java.awt.Font("Raleway", 1, 18)); // NOI18N
        jButtonCancelar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/close_icone.png"))); // NOI18N
        jButtonCancelar.setText("Cancelar");

        jLabel5.setFont(new java.awt.Font("Raleway", 1, 14)); // NOI18N
        jLabel5.setText("Horário:");

        jLabel6.setFont(new java.awt.Font("Raleway", 1, 14)); // NOI18N
        jLabel6.setText("Observações:");

        jTextAreaObserv.setColumns(20);
        jTextAreaObserv.setRows(5);
        jScrollPane1.setViewportView(jTextAreaObserv);

        jLabel7.setFont(new java.awt.Font("Raleway", 1, 14)); // NOI18N
        jLabel7.setText("Tipo de Veiculo:");

        jComboBoxTipoVeiculo.setFont(new java.awt.Font("Raleway", 0, 14)); // NOI18N
        jComboBoxTipoVeiculo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Carro", "Moto", "Caminhão", "Ônibus", "Reboque", "Outro" }));

        jLabel8.setFont(new java.awt.Font("Segoe UI Symbol", 0, 24)); // NOI18N
        jLabel8.setText("DATA:");

        jRadioButtonSemCadastro.setFont(new java.awt.Font("Raleway", 1, 14)); // NOI18N
        jRadioButtonSemCadastro.setSelected(true);
        jRadioButtonSemCadastro.setText("Sem cadastro");
        jRadioButtonSemCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSemCadastroActionPerformed(evt);
            }
        });

        jRadioButtonCliente.setFont(new java.awt.Font("Raleway", 1, 14)); // NOI18N
        jRadioButtonCliente.setText("Cliente:");
        jRadioButtonCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonClienteActionPerformed(evt);
            }
        });

        jRadioButtonSemParceiro.setFont(new java.awt.Font("Raleway", 1, 14)); // NOI18N
        jRadioButtonSemParceiro.setSelected(true);
        jRadioButtonSemParceiro.setText("Sem parceiro");
        jRadioButtonSemParceiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSemParceiroActionPerformed(evt);
            }
        });

        jRadioButtonParceiro.setFont(new java.awt.Font("Raleway", 1, 14)); // NOI18N
        jRadioButtonParceiro.setText("Parceiro:");
        jRadioButtonParceiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonParceiroActionPerformed(evt);
            }
        });

        jComboBoxParceiro.setFont(new java.awt.Font("Raleway", 1, 14)); // NOI18N
        jComboBoxParceiro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nenhum" }));

        jLabel3.setFont(new java.awt.Font("Raleway", 1, 24)); // NOI18N
        jLabel3.setText("Agendamento");

        jLabel2.setFont(new java.awt.Font("Raleway", 1, 14)); // NOI18N
        jLabel2.setText("Telefone:");

        try {
            jTextFieldTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooserDataAgendamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jRadioButtonSemCadastro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldNomeCliente))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jRadioButtonSemParceiro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonParceiro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxParceiro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldEndereco)))
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldTelefone))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxTipoVeiculo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonAgendar)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonCancelar)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBoxHorario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel8))
                    .addComponent(jDateChooserDataAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonSemCadastro)
                    .addComponent(jRadioButtonCliente)
                    .addComponent(jTextFieldNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonSemParceiro)
                    .addComponent(jRadioButtonParceiro)
                    .addComponent(jComboBoxParceiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldEndereco, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jComboBoxTipoVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonAgendar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonCancelar, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jDateChooserDataAgendamento, jLabel3, jLabel8});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jComboBoxHorario, jComboBoxParceiro, jComboBoxTipoVeiculo, jTextFieldEndereco, jTextFieldNomeCliente, jTextFieldTelefone});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonAgendar, jButtonCancelar});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAgendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgendarActionPerformed
        Agendamento novoagendamento = new Agendamento();

        novoagendamento.setStatus('a');
        
        if (jRadioButtonSemParceiro.isSelected()) {
            novoagendamento.setParceiro(null);
        } else {
            novoagendamento.setParceiro(parceiroDAO.findByNome(jComboBoxParceiro.getSelectedItem().toString()).get(0));
        }
        if (jRadioButtonSemCadastro.isSelected()) {
            novoagendamento.setCliente(null);
        } // Criar novo cliente e fazer a busca com DAO de acordo com o valor do jtext.
        else {
            novoagendamento.setCliente(clienteSelecionado);
        }
        novoagendamento.setDataagendamento(jDateChooserDataAgendamento.getDate());

        if (salvaid != null) {
            novoagendamento.setCodigo(salvaid);

            if (agendamentoDAO.buscaPorData(jDateChooserDataAgendamento.getDate()) == null) {
                if (agendamentoDAO.buscaPorData(jDateChooserDataAgendamento.getDate()).get(jComboBoxHorario.getSelectedIndex()).getTipoveiculo() == null) {
                    novoagendamento.getDataagendamento().setHours(Integer.parseInt("" + jComboBoxHorario.getSelectedItem()));
                    novoagendamento.setEndereco(jTextFieldEndereco.getText());
                    novoagendamento.setObservacao(jTextAreaObserv.getText());
                    novoagendamento.setCaixa(caixaAberto);
                    novoagendamento.setTelefone(jTextFieldTelefone.getText());

                    if (agendamentoDAO.buscaPorData(jDateChooserDataAgendamento.getDate()).isEmpty()) {
                        switch (jComboBoxHorario.getSelectedItem().toString()) {
                            case "8":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "9":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "10":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "11":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "12":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "13":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "14":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "15":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "16":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "17":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                break;

                        }
                    }
                    agendamentoDAO.merge(novoagendamento);
                    JOptionPane.showMessageDialog(null, "O agendamento foi salvo!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Horário já agendado, favor escolher outro!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                    jComboBoxHorario.requestFocus(true);

                }

            } else {
                if (jComboBoxTipoVeiculo.getSelectedItem() != "Selecione") {
                    novoagendamento.setTipoveiculo(jComboBoxTipoVeiculo.getSelectedItem().toString());

                    // Verifica se foi selecionado algum horario, caso sim, altera somente o horário no date.
                    if (jComboBoxHorario.getSelectedItem() != "Selecione") {
                        novoagendamento.getDataagendamento().setHours(Integer.parseInt("" + jComboBoxHorario.getSelectedItem()));

                        novoagendamento.setEndereco(jTextFieldEndereco.getText());
                        novoagendamento.setObservacao(jTextAreaObserv.getText());
                        novoagendamento.setCaixa(caixaAberto);
                        novoagendamento.setTelefone(jTextFieldTelefone.getText());


                       novoagendamento.setCodigo(agendamentoNovo.getCodigo());

                        agendamentoDAO.merge(novoagendamento);
                        JOptionPane.showMessageDialog(null, "O agendamento foi salvo!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                        dispose();

                    } else {
                        JOptionPane.showMessageDialog(null, "Favor selecionar um horário!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Favor selecionar o tipo do veiculo!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } else {
            if (jComboBoxTipoVeiculo.getSelectedItem() != "Selecione") {
                novoagendamento.setTipoveiculo(jComboBoxTipoVeiculo.getSelectedItem().toString());

                // Verifica se foi selecionado algum horario, caso sim, altera somente o horário no date.
                if (jComboBoxHorario.getSelectedItem() != "Selecione") {
                    novoagendamento.getDataagendamento().setHours(Integer.parseInt("" + jComboBoxHorario.getSelectedItem()));

                    novoagendamento.setEndereco(jTextFieldEndereco.getText());
                    novoagendamento.setObservacao(jTextAreaObserv.getText());
                    novoagendamento.setCaixa(caixaAberto);
                    novoagendamento.setTelefone(jTextFieldTelefone.getText());

                    // Se não receber o código por parametro, ou seja, não existe agendamento para o dia.
                    if (agendamentoNovo == null) {

                        switch (jComboBoxHorario.getSelectedItem().toString()) {
                            case "8":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "9":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "10":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "11":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "12":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "13":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "14":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "15":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "16":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 17);
                                break;
                            case "17":
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 8);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 9);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 10);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 11);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 12);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 13);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 14);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 15);
                                agendaVazia(jDateChooserDataAgendamento.getDate(), 16);
                                break;

                        }

                    } // Existe agendamento marcado no dia.
                    else {
                        novoagendamento.setCodigo(agendamentoNovo.getCodigo());
                    }
                    agendamentoDAO.merge(novoagendamento);
                    JOptionPane.showMessageDialog(null, "O agendamento foi salvo!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                    dispose();

                } else {
                    JOptionPane.showMessageDialog(null, "Favor selecionar um horário!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Favor selecionar o tipo do veiculo!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            }

        }
    }//GEN-LAST:event_jButtonAgendarActionPerformed

    private void jRadioButtonClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonClienteActionPerformed
        jRadioButtonSemCadastro.setSelected(false);

        SelecionarClienteVisao scv = new SelecionarClienteVisao();
        scv.setModal(true);
        scv.setVisible(true);

        if (scv.clienteSelecionado != null) {
            clienteSelecionado = scv.clienteSelecionado;
            jTextFieldNomeCliente.setText(clienteSelecionado.getNome());
        }
    }//GEN-LAST:event_jRadioButtonClienteActionPerformed

    private void jRadioButtonSemCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSemCadastroActionPerformed
        jRadioButtonCliente.setSelected(false);
        jTextFieldNomeCliente.setText("");
    }//GEN-LAST:event_jRadioButtonSemCadastroActionPerformed

    private void jRadioButtonParceiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonParceiroActionPerformed
        jRadioButtonSemParceiro.setSelected(false);
    }//GEN-LAST:event_jRadioButtonParceiroActionPerformed

    private void jRadioButtonSemParceiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSemParceiroActionPerformed
        jRadioButtonParceiro.setSelected(false);
        jComboBoxParceiro.setSelectedIndex(0);
    }//GEN-LAST:event_jRadioButtonSemParceiroActionPerformed

    private void agendaVazia(Date date, int horario) {
        date.setHours(horario);
        date.setMinutes(0);

        Agendamento novoagendamento = new Agendamento();
        novoagendamento.setParceiro(null);
        novoagendamento.setCliente(null);
        novoagendamento.setDataagendamento(date);
        novoagendamento.setEndereco(null);
        novoagendamento.setCaixa(null);
        novoagendamento.setObservacao("");
        novoagendamento.setTipoveiculo(null);
        agendamentoDAO.merge(novoagendamento);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgendamentoVisao.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgendamentoVisao.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgendamentoVisao.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgendamentoVisao.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgendamentoVisao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgendar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JComboBox<String> jComboBoxHorario;
    private javax.swing.JComboBox<String> jComboBoxParceiro;
    private javax.swing.JComboBox<String> jComboBoxTipoVeiculo;
    private com.toedter.calendar.JDateChooser jDateChooserDataAgendamento;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JRadioButton jRadioButtonCliente;
    private javax.swing.JRadioButton jRadioButtonParceiro;
    private javax.swing.JRadioButton jRadioButtonSemCadastro;
    private javax.swing.JRadioButton jRadioButtonSemParceiro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaObserv;
    private javax.swing.JTextField jTextFieldEndereco;
    private javax.swing.JTextField jTextFieldNomeCliente;
    private javax.swing.JFormattedTextField jTextFieldTelefone;
    // End of variables declaration//GEN-END:variables
}
